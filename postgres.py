# -*- coding: utf-8 -*-
"""postgres.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xXKjCD04sGAU4n9175xNMjehztPf9YVa
"""

import pandas as pd
import joblib
from sqlalchemy import create_engine

def database():
    df = pd.read_csv("/content/Renewal_data_extract_new.csv")
    df_processed = engineer_features(df)
    X = df_processed.drop(columns=['renewal_outcome'], errors='ignore')
    y = df_processed['renewal_outcome'] if 'renewal_outcome' in df_processed.columns else None
    model = joblib.load("/content/final_model (1).pkl")
    y_pred = model.predict(X)
    y_prob = model.predict_proba(X)
    label_mapping = {0: "Accepted", 1: "Call_Back", 2: "Churn"}
    results_df = X.copy().reset_index(drop=True)
    results_df["predicted_class"] = [label_mapping[i] for i in y_pred]
    for i, class_name in enumerate(["prob_Accepted", "prob_Call_Back", "prob_Churn"]):
        results_df[class_name] = y_prob[:, i]
    if y is not None:
        results_df["true_class"] = y.map(label_mapping)
    engine = create_engine("postgresql://<username>:<password>@<host>:<port>/<database>")
    results_df.to_sql("model_predictions", engine, if_exists="replace", index=False,chunks=10000)

database()